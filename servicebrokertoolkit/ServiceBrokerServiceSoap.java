
package servicebrokertoolkit;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.2-b05-RC1
 * Generated source version: 2.1
 * 
 */
@WebService(name = "ServiceBrokerServiceSoap", targetNamespace = "http://ilab.mit.edu")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface ServiceBrokerServiceSoap {


    /**
     * Checks on the status of the lab server
     * 
     * @param labServerID
     * @return
     *     returns servicebrokertoolkit.LabStatus
     */
    @WebMethod(operationName = "GetLabStatus", action = "http://ilab.mit.edu/GetLabStatus")
    @WebResult(name = "GetLabStatusResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "GetLabStatus", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetLabStatus")
    @ResponseWrapper(localName = "GetLabStatusResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetLabStatusResponse")
    public LabStatus getLabStatus(
        @WebParam(name = "labServerID", targetNamespace = "http://ilab.mit.edu")
        String labServerID);

    /**
     * Checks on the effective queue length of the Lab Server
     * 
     * @param priorityHint
     * @param labServerID
     * @return
     *     returns servicebrokertoolkit.WaitEstimate
     */
    @WebMethod(operationName = "GetEffectiveQueueLength", action = "http://ilab.mit.edu/GetEffectiveQueueLength")
    @WebResult(name = "GetEffectiveQueueLengthResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "GetEffectiveQueueLength", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetEffectiveQueueLength")
    @ResponseWrapper(localName = "GetEffectiveQueueLengthResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetEffectiveQueueLengthResponse")
    public WaitEstimate getEffectiveQueueLength(
        @WebParam(name = "labServerID", targetNamespace = "http://ilab.mit.edu")
        String labServerID,
        @WebParam(name = "priorityHint", targetNamespace = "http://ilab.mit.edu")
        int priorityHint);

    /**
     * Gets general information about a lab server
     * 
     * @param labServerID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetLabInfo", action = "http://ilab.mit.edu/GetLabInfo")
    @WebResult(name = "GetLabInfoResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "GetLabInfo", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetLabInfo")
    @ResponseWrapper(localName = "GetLabInfoResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetLabInfoResponse")
    public String getLabInfo(
        @WebParam(name = "labServerID", targetNamespace = "http://ilab.mit.edu")
        String labServerID);

    /**
     * Gets the lab configuration of a lab server
     * 
     * @param labServerID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "GetLabConfiguration", action = "http://ilab.mit.edu/GetLabConfiguration")
    @WebResult(name = "GetLabConfigurationResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "GetLabConfiguration", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetLabConfiguration")
    @ResponseWrapper(localName = "GetLabConfigurationResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetLabConfigurationResponse")
    public String getLabConfiguration(
        @WebParam(name = "labServerID", targetNamespace = "http://ilab.mit.edu")
        String labServerID);

    /**
     * Submits an experiment specification to the lab server for exection
     * 
     * @param experimentSpecification
     * @param labServerID
     * @return
     *     returns servicebrokertoolkit.ValidationReport
     */
    @WebMethod(operationName = "Validate", action = "http://ilab.mit.edu/Validate")
    @WebResult(name = "ValidateResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "Validate", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.Validate")
    @ResponseWrapper(localName = "ValidateResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.ValidateResponse")
    public ValidationReport validate(
        @WebParam(name = "labServerID", targetNamespace = "http://ilab.mit.edu")
        String labServerID,
        @WebParam(name = "experimentSpecification", targetNamespace = "http://ilab.mit.edu")
        String experimentSpecification);

    /**
     * Submits an experiment specification to the lab server for exection
     * 
     * @param priorityHint
     * @param experimentSpecification
     * @param emailNotification
     * @param labServerID
     * @return
     *     returns servicebrokertoolkit.ClientSubmissionReport
     */
    @WebMethod(operationName = "Submit", action = "http://ilab.mit.edu/Submit")
    @WebResult(name = "SubmitResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "Submit", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.Submit")
    @ResponseWrapper(localName = "SubmitResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.SubmitResponse")
    public ClientSubmissionReport submit(
        @WebParam(name = "labServerID", targetNamespace = "http://ilab.mit.edu")
        String labServerID,
        @WebParam(name = "experimentSpecification", targetNamespace = "http://ilab.mit.edu")
        String experimentSpecification,
        @WebParam(name = "priorityHint", targetNamespace = "http://ilab.mit.edu")
        int priorityHint,
        @WebParam(name = "emailNotification", targetNamespace = "http://ilab.mit.edu")
        boolean emailNotification);

    /**
     * Checks on the status of a previously submitted experiment
     * 
     * @param experimentID
     * @return
     *     returns servicebrokertoolkit.LabExperimentStatus
     */
    @WebMethod(operationName = "GetExperimentStatus", action = "http://ilab.mit.edu/GetExperimentStatus")
    @WebResult(name = "GetExperimentStatusResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "GetExperimentStatus", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetExperimentStatus")
    @ResponseWrapper(localName = "GetExperimentStatusResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetExperimentStatusResponse")
    public LabExperimentStatus getExperimentStatus(
        @WebParam(name = "experimentID", targetNamespace = "http://ilab.mit.edu")
        int experimentID);

    /**
     * Cancels a previously submitted experiment. If the experiment is already running, makes best efforts to abort execution, but there is no guarantee that the experiment will not run to completion
     * 
     * @param experimentID
     * @return
     *     returns boolean
     */
    @WebMethod(operationName = "Cancel", action = "http://ilab.mit.edu/Cancel")
    @WebResult(name = "CancelResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "Cancel", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.Cancel")
    @ResponseWrapper(localName = "CancelResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.CancelResponse")
    public boolean cancel(
        @WebParam(name = "experimentID", targetNamespace = "http://ilab.mit.edu")
        int experimentID);

    /**
     * Retrieves the results from (or errors generated by) a previously submitted experiment
     * 
     * @param experimentID
     * @return
     *     returns servicebrokertoolkit.ResultReport
     */
    @WebMethod(operationName = "RetrieveResult", action = "http://ilab.mit.edu/RetrieveResult")
    @WebResult(name = "RetrieveResultResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "RetrieveResult", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.RetrieveResult")
    @ResponseWrapper(localName = "RetrieveResultResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.RetrieveResultResponse")
    public ResultReport retrieveResult(
        @WebParam(name = "experimentID", targetNamespace = "http://ilab.mit.edu")
        int experimentID);

    /**
     * Notification from the Lab Server that a previously submitted experiment has terminated.
     * 
     * @param experimentID
     */
    @WebMethod(operationName = "Notify", action = "http://ilab.mit.edu/Notify")
    @RequestWrapper(localName = "Notify", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.Notify")
    @ResponseWrapper(localName = "NotifyResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.NotifyResponse")
    public void notify(
        @WebParam(name = "experimentID", targetNamespace = "http://ilab.mit.edu")
        int experimentID);

    /**
     * Sets a client item value in the user's opaque data store
     * 
     * @param itemValue
     * @param name
     */
    @WebMethod(operationName = "SaveClientItem", action = "http://ilab.mit.edu/SaveClientItem")
    @RequestWrapper(localName = "SaveClientItem", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.SaveClientItem")
    @ResponseWrapper(localName = "SaveClientItemResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.SaveClientItemResponse")
    public void saveClientItem(
        @WebParam(name = "name", targetNamespace = "http://ilab.mit.edu")
        String name,
        @WebParam(name = "itemValue", targetNamespace = "http://ilab.mit.edu")
        String itemValue);

    /**
     * Returns the value of an client item in the user's opaque data store
     * 
     * @param name
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "LoadClientItem", action = "http://ilab.mit.edu/LoadClientItem")
    @WebResult(name = "LoadClientItemResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "LoadClientItem", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.LoadClientItem")
    @ResponseWrapper(localName = "LoadClientItemResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.LoadClientItemResponse")
    public String loadClientItem(
        @WebParam(name = "name", targetNamespace = "http://ilab.mit.edu")
        String name);

    /**
     * Removes an client item from the user's opaque data store
     * 
     * @param name
     */
    @WebMethod(operationName = "DeleteClientItem", action = "http://ilab.mit.edu/DeleteClientItem")
    @RequestWrapper(localName = "DeleteClientItem", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.DeleteClientItem")
    @ResponseWrapper(localName = "DeleteClientItemResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.DeleteClientItemResponse")
    public void deleteClientItem(
        @WebParam(name = "name", targetNamespace = "http://ilab.mit.edu")
        String name);

    /**
     * Enumerates the names of all client items in the user's opaque data store
     * 
     * @return
     *     returns servicebrokertoolkit.ArrayOfString
     */
    @WebMethod(operationName = "ListAllClientItems", action = "http://ilab.mit.edu/ListAllClientItems")
    @WebResult(name = "ListAllClientItemsResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "ListAllClientItems", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.ListAllClientItems")
    @ResponseWrapper(localName = "ListAllClientItemsResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.ListAllClientItemsResponse")
    public ArrayOfString listAllClientItems();

    /**
     * Retrieves a previously saved experiment specification
     * 
     * @param experimentID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "RetrieveSpecification", action = "http://ilab.mit.edu/RetrieveSpecification")
    @WebResult(name = "RetrieveSpecificationResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "RetrieveSpecification", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.RetrieveSpecification")
    @ResponseWrapper(localName = "RetrieveSpecificationResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.RetrieveSpecificationResponse")
    public String retrieveSpecification(
        @WebParam(name = "experimentID", targetNamespace = "http://ilab.mit.edu")
        int experimentID);

    /**
     * Retrieves a previously saved lab configuration for a particular experiment
     * 
     * @param experimentID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "RetrieveLabConfiguration", action = "http://ilab.mit.edu/RetrieveLabConfiguration")
    @WebResult(name = "RetrieveLabConfigurationResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "RetrieveLabConfiguration", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.RetrieveLabConfiguration")
    @ResponseWrapper(localName = "RetrieveLabConfigurationResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.RetrieveLabConfigurationResponse")
    public String retrieveLabConfiguration(
        @WebParam(name = "experimentID", targetNamespace = "http://ilab.mit.edu")
        int experimentID);

    /**
     * Saves or modifies an optional user defined annotation to the experiment record.
     * 
     * @param annotation
     * @param experimentID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "SaveAnnotation", action = "http://ilab.mit.edu/SaveAnnotation")
    @WebResult(name = "SaveAnnotationResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "SaveAnnotation", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.SaveAnnotation")
    @ResponseWrapper(localName = "SaveAnnotationResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.SaveAnnotationResponse")
    public String saveAnnotation(
        @WebParam(name = "experimentID", targetNamespace = "http://ilab.mit.edu")
        int experimentID,
        @WebParam(name = "annotation", targetNamespace = "http://ilab.mit.edu")
        String annotation);

    /**
     * Retrieves a previously saved experiment annotation.
     * 
     * @param experimentID
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "RetrieveAnnotation", action = "http://ilab.mit.edu/RetrieveAnnotation")
    @WebResult(name = "RetrieveAnnotationResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "RetrieveAnnotation", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.RetrieveAnnotation")
    @ResponseWrapper(localName = "RetrieveAnnotationResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.RetrieveAnnotationResponse")
    public String retrieveAnnotation(
        @WebParam(name = "experimentID", targetNamespace = "http://ilab.mit.edu")
        int experimentID);

    /**
     * Retrieves experiment metadata for experiments specified by an array of experiment IDs.
     * 
     * @param experimentIDs
     * @return
     *     returns servicebrokertoolkit.ArrayOfExperimentInformation
     */
    @WebMethod(operationName = "GetExperimentInformation", action = "http://ilab.mit.edu/GetExperimentInformation")
    @WebResult(name = "GetExperimentInformationResult", targetNamespace = "http://ilab.mit.edu")
    @RequestWrapper(localName = "GetExperimentInformation", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetExperimentInformation")
    @ResponseWrapper(localName = "GetExperimentInformationResponse", targetNamespace = "http://ilab.mit.edu", className = "servicebrokertoolkit.GetExperimentInformationResponse")
    public ArrayOfExperimentInformation getExperimentInformation(
        @WebParam(name = "experimentIDs", targetNamespace = "http://ilab.mit.edu")
        ArrayOfInt experimentIDs);

}
