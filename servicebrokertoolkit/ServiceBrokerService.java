
package servicebrokertoolkit;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
//import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.2-b05-RC1
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "ServiceBrokerService", targetNamespace = "http://ilab.mit.edu")
public class ServiceBrokerService
    extends Service
{
    //, wsdlLocation = "http://localhost/servicebroker/Services/Servicebrokerservice.asmx?wsdl"
    
    private final static URL SERVICEBROKERSERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(servicebrokertoolkit.ServiceBrokerService.class.getName());
    
    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = servicebrokertoolkit.ServiceBrokerService.class.getResource(".");
            url = new URL(baseUrl, "http://localhost/servicebroker/Services/Servicebrokerservice.asmx?wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://localhost/servicebroker/Services/Servicebrokerservice.asmx?wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        SERVICEBROKERSERVICE_WSDL_LOCATION = url;
    }
    
    public ServiceBrokerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ServiceBrokerService() {
        super(SERVICEBROKERSERVICE_WSDL_LOCATION, new QName("http://ilab.mit.edu", "ServiceBrokerService"));
    }
    
    /**
     * 
     * @return
     *     returns ServiceBrokerServiceSoap
     */
    @WebEndpoint(name = "ServiceBrokerServiceSoap")
    public ServiceBrokerServiceSoap getServiceBrokerServiceSoap() {
        return super.getPort(new QName("http://ilab.mit.edu", "ServiceBrokerServiceSoap"), ServiceBrokerServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServiceBrokerServiceSoap
     */
//    @WebEndpoint(name = "ServiceBrokerServiceSoap")
//    public ServiceBrokerServiceSoap getServiceBrokerServiceSoap(WebServiceFeature... features) {
//        return super.getPort(new QName("http://ilab.mit.edu", "ServiceBrokerServiceSoap"), ServiceBrokerServiceSoap.class, features);
//    }

    /**
     * 
     * @return
     *     returns ServiceBrokerServiceSoap
     */
    @WebEndpoint(name = "ServiceBrokerServiceSoap12")
    public ServiceBrokerServiceSoap getServiceBrokerServiceSoap12() {
        return super.getPort(new QName("http://ilab.mit.edu", "ServiceBrokerServiceSoap12"), ServiceBrokerServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServiceBrokerServiceSoap
     */
////    @WebEndpoint(name = "ServiceBrokerServiceSoap12")
//    public ServiceBrokerServiceSoap getServiceBrokerServiceSoap12(WebServiceFeature... features) {
//        return super.getPort(new QName("http://ilab.mit.edu", "ServiceBrokerServiceSoap12"), ServiceBrokerServiceSoap.class, features);
//    }
}
